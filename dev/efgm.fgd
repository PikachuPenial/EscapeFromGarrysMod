//-------------------------------------------------------------------------
//
// Game data for Escape From Garry's Mod
//
//-------------------------------------------------------------------------

@include "base.fgd"
@include "halflife2.fgd"

@PointClass base(Weapon)	studio("models/weapons/w_smg1.mdl")	= efgm_random_weapon	: "Spawns a random weapon"
[
	spawn_chance(integer)	: "Weapon Spawn Chance"	: 0	: "The chance a weapon will be spawned from this. (100 is a guranteed spawn, 50 will spawn a gun half the time, etc.)"

	start_disabled(choices)	: "Start Disabled"		: 0	: "Will this spawn start disabled or not." =
	[
		0 : "No"
		1 : "Yes"
	]

	weapon_tier(choices)	: "Weapon Tier"			: 0	: "The weapon spawned from this entity will depend on what tier it's set to." =
	[
		0 : "Low-Tier"
		1 : "Mid-Tier"
		2 : "High-Tier"
		3 : "Grenades"
	]

	// Outputs
	output	OnSpawn(void)	: "Fires when the item spawns. (Includes respawns)"

	// Inputs
	input	Respawn(void)	: "This spawns an item when there is no current item spawned"
]

@PointClass base(Weapon)	studio("models/weapons/w_grenade.mdl")	= efgm_random_nade	: "Spawns a random grenade"
[
	spawn_chance(integer)	: "Weapon Spawn Chance"	: 0	: "The chance a grenade will be spawned from this. (100 is a guranteed spawn, 50 will spawn a grenade half the time, etc.)"

	start_disabled(choices)	: "Start Disabled"		: 0	: "Will this spawn start disabled or not." =
	[
		0 : "No"
		1 : "Yes"
	]

	nade_tier(choices)	: "Weapon Tier"			: 0	: "The weapon spawned from this entity will depend on what tier it's set to." =
	[
		0 : "Grenades"
	]

	// Outputs
	output	OnSpawn(void)	: "Fires when the item spawns. (Includes respawns)"

	// Inputs
	input	Respawn(void)	: "This spawns an item when there is no current item spawned"
]

@SolidClass base(Trigger) = efgm_trigger_task : "Task Trigger"
[

	location_name(string)			: "Location Name"			: ""											: "This is the name of the location, used by sv_tasks to complete the locate subtask."

	location_daily(boolean)			: "Is Location Daily"		: 1												: "Used by the task script to generate operational tasks. Set this to "
	
]

@PointClass base(Weapon) studio("models/player/helmet_maska_1sh_killa/maska_killa.mdl") = efgm_random_helmet : "Spawns a random helmet"
[
	spawn_chance(integer) : "Helmet Spawn Chance" : 0 : "The chance a helmet will be spawned from this. (100 is a guranteed spawn, 50 will spawn a helmet half the time, etc.)"

	helmet_tier(choices) : "Helmet Tier" : 0 : "The helmet spawned from this entity will depend on what tier it's set to." =
	[
		0 : "Mid-Tier"
		1 : "High-Tier"
	]
]

@PointClass base(Weapon) studio("models/eft_paca_armor/paca_soft_armor.mdl") = efgm_random_vest : "Spawns a random vest"
[
	spawn_chance(integer) : "Vest Spawn Chance" : 0 : "The chance a vest will be spawned from this. (100 is a guranteed spawn, 50 will spawn a vest half the time, etc.)"

	vest_tier(choices) : "Vest Tier" : 0 : "The vest spawned from this entity will depend on what tier it's set to." =
	[
		0 : "Mid-Tier"
		1 : "High-Tier"
	]
]

@PointClass base(Weapon) studio("models/player/armor_6b34/6b34.mdl") = efgm_random_armor : "Spawns a random armor item, can be either a helmet or vest."
[
	spawn_chance(integer) : "Armor Spawn Chance" : 0 : "The chance a armor will be spawned from this. (100 is a guranteed spawn, 50 will spawn armor half the time, etc.)"

	armor_tier(choices) : "Armor Tier" : 0 : "The armor spawned from this entity will depend on what tier it's set to." =
	[
		0 : "Mid-Tier"
		1 : "High-Tier"
	]
]

@PointClass base(Weapon) studio("models/player/items/humans/graduation_cap.mdl") = efgm_random_shield : "Spawns a random face shield."
[
	spawn_chance(integer) : "Shield Spawn Chance" : 0 : "The chance a shield will be spawned from this. (100 is a guranteed spawn, 50 will spawn shield half the time, etc.)"

	shield_tier(choices) : "Shield Tier" : 0 : "The shield spawned from this entity will depend on what tier it's set to." =
	[
		0 : "Weak Shields"
		1 : "Strong Shields"
        2 : "Mixed"
	]
]

@PointClass base(Weapon) studio("models/player/items/humans/top_hat.mdl") = efgm_random_wearable : "Spawns a random wearable."
[
	spawn_chance(integer) : "Wearable Spawn Chance" : 0 : "The chance a wearable will be spawned from this. (100 is a guranteed spawn, 50 will spawn wearable half the time, etc.)"

	wearable_tier(choices) : "Shield Tier" : 0 : "The wearable spawned from this entity will depend on what tier it's set to." =
	[
		0 : "Gas Masks"
		1 : "Googles"
        2 : "Mixed"
	]
]

@PointClass base(Weapon) studio("models/weapons/w_357.mdl") = efgm_random_ammo : "Spawns a random ammo item."
[
	spawn_chance(integer) : "Ammo Spawn Chance" : 0 : "The chance a ammo will be spawned from this. (100 is a guranteed spawn, 50 will spawn ammo half the time, etc.)"

	ammo_tier(choices) : "Ammo Tier" : 0 : "The ammo spawned from this entity will depend on what tier it's set to." =
	[
		0 : "Small"
		1 : "Large"
        2 : "Mixed"
	]
]

@PointClass base(Weapon) studio("models/weapons/w_medkit.mdl") = efgm_random_medical : "Spawns a random medical item."
[
	spawn_chance(integer) : "Medical Item Spawn Chance" : 0 : "The chance a medical item will be spawned from this. (100 is a guranteed spawn, 50 will spawn medical items half the time, etc.)"

	med_tier(choices) : "Medical Item" : 0 : "The medical item spawned from this entity will depend on what tier it's set to." =
	[
		0 : "Random"
		1 : "Bandage"
        2 : "Quikclot"
        3 : "Hemostat"
	]
]

@PointClass base(Weapon) studio("models/weapons/w_smg1.mdl") = efgm_random_attach : "Spawns a random attachment."
[
	spawn_chance(integer) : "Attachment Spawn Chance" : 0 : "The chance a attachment will be spawned from this. (100 is a guranteed spawn, 50 will spawn attachments half the time, etc.)"

	attach_tier(choices) : "Attachment Type" : 0 : "The attachment spawned from this entity will depend on what tier it's set to." =
	[
		0 : "All"
		1 : "Optics"
        2 : "Barrels"
        3 : "Foregrips"
	]
]

//penial_money

@PointClass base(Weapon) studio("models/props/cs_assault/money.mdl") = money : "Money Spawn"
[
	money_value(integer) : "Money Amount" : 200 : "Amount of money the player earns on pickup."

	spawn_chance(integer) : "Armor Spawn Chance" : 100 : "Chance this entity will spawn money (0 is never, 100 is always)"
]

@PointClass base(Weapon)    studio("models/efgm/low_crate02.mdl")    = efgm_weapon_crate    : "Spawns a low-tier weapon crate"
[
    spawn_chance(integer)    : "Weapon Spawn Chance"    : 10    : "The chance a weapon will be spawned from this. (0 will never spawn a crate, 10 always spawns a crate.)"

    respawn_timer(integer)    : "Respawn Time"        : 90    : "The time (in seconds) it takes for this weapon to respawn."

    start_disabled(choices)    : "Start Disabled"        : 0        : "Will this spawn start disabled or not." =
    [
        0 : "No"
        1 : "Yes"
    ]

    crate_respawn(choices)    : "Do Respawn"            : 1        : "Will this crate automatically respawn?" =
    [
        0 : "No"
        1 : "Yes"
    ]

    crate_tier(choices)        : "Crate Tier"            : 0        : "The crate spawned from this entity will depend on what tier it's set to." =
    [
        0 : "Low-Tier"
        1 : "Mid-Tier"
        2 : "High-Tier"
        3 : "Utility"
    ]

    // Outputs
    output    OnSpawn(void)    : "Fires when the item spawns. (Includes respawns)"

    // Inputs
    input    Respawn(void)    : "This spawns an item when there is no current item spawned"
]

//eft_armor_entities_helmets

@PointClass base(Weapon) studio("models/items/healthkit.mdl") = helmet_6b47				: "6B47 Ratnik-BSh Helmet				(Tier 3)" []
@PointClass base(Weapon) studio("models/items/healthkit.mdl") = helmet_6b47_2			: "6B47 Ratnik-BSh Helmet				(Tier 3)" []
@PointClass base(Weapon) studio("models/items/healthkit.mdl") = helmet_achhc_black		: "Highcom Striker ACHHC IIIA Helmet	(Tier 4)" []
@PointClass base(Weapon) studio("models/items/healthkit.mdl") = helmet_achhc_green		: "Highcom Striker ACHHC IIIA Helmet	(Tier 4)" []
@PointClass base(Weapon) studio("models/items/healthkit.mdl") = helmet_kiver			: "Kiver-M Helmet						(Tier 3)" []
@PointClass base(Weapon) studio("models/items/healthkit.mdl") = helmet_lzsh				: "LZSh Light Helmet					(Tier 3)" []
@PointClass base(Weapon) studio("models/items/healthkit.mdl") = helmet_maska_1sch		: "Maska 1Sch Helmet					(Tier 4)" []
@PointClass base(Weapon) studio("models/items/healthkit.mdl") = helmet_maska_1sch_killa	: "Maska 1Sch Helmet					(Tier 4)" []
@PointClass base(Weapon) studio("models/items/healthkit.mdl") = helmet_opscore			: "Ops-Core Fast MT Helmet				(Tier 4)" []
@PointClass base(Weapon) studio("models/items/healthkit.mdl") = helmet_opscore_visor	: "Ops-Core Fast MT Helmet				(Tier 4)" []
@PointClass base(Weapon) studio("models/items/healthkit.mdl") = helmet_psh97			: "PSH-97 Djeta helmet					(Tier 2)" []
@PointClass base(Weapon) studio("models/items/healthkit.mdl") = helmet_shpm				: "SHPM Firefighter's Helmet			(Tier 2)" []
@PointClass base(Weapon) studio("models/items/healthkit.mdl") = helmet_ulach			: "Highcom Striker ULACH IIIA Helmet	(Tier 4)" []
@PointClass base(Weapon) studio("models/items/healthkit.mdl") = helmet_untar			: "UNTAR Helmet							(Tier 3)" []
@PointClass base(Weapon) studio("models/items/healthkit.mdl") = helmet_zsh1_2m			: "ZSh-1-2M Helmet						(Tier 4)" []

//eft_armor_entities_vests

@PointClass base(Weapon) studio("models/items/healthkit.mdl") = vest_3m					: "Module-3M Body Armor					(Tier 2)" []
@PointClass base(Weapon) studio("models/items/healthkit.mdl") = vest_6b5				: "6B2 Body Armor						(Tier 2)" []
@PointClass base(Weapon) studio("models/items/healthkit.mdl") = vest_6b13_1				: "6B13 Assault Armor					(Tier 4)" []
@PointClass base(Weapon) studio("models/items/healthkit.mdl") = vest_6b13_2				: "6B13 Assault Armor					(Tier 4)" []
@PointClass base(Weapon) studio("models/items/healthkit.mdl") = vest_6b13_m				: "6B13 Assault Armor					(Tier 4)" []
@PointClass base(Weapon) studio("models/items/healthkit.mdl") = vest_6b23_1				: "6B23-1 Armor 						(Tier 3)" []
@PointClass base(Weapon) studio("models/items/healthkit.mdl") = vest_6b23_2				: "6B23-2 Armor							(Tier 4)" []
@PointClass base(Weapon) studio("models/items/healthkit.mdl") = vest_6b43				: "6B43 Zabralo-Sh 6A Armor				(Tier 6)" []
@PointClass base(Weapon) studio("models/items/healthkit.mdl") = vest_a18				: "Ars Arma A18 Skanda Plate Carrier	(Tier 4)" []
@PointClass base(Weapon) studio("models/items/healthkit.mdl") = vest_bnti_gzhel_k		: "BNTI Gzhel-K Armor					(Tier 5)" []
@PointClass base(Weapon) studio("models/items/healthkit.mdl") = vest_bnti_kirasa		: "BNTI Kirasa-N Armor					(Tier 3)" []
@PointClass base(Weapon) studio("models/items/healthkit.mdl") = vest_iotv_gen4_full		: "IOTV Gen4 Armor						(Tier 5)" []
@PointClass base(Weapon) studio("models/items/healthkit.mdl") = vest_m2					: "ANA Tactical M2 Armored Rig			(Tier 4)" []
@PointClass base(Weapon) studio("models/items/healthkit.mdl") = vest_paca				: "PACA Soft Armor						(Tier 2)" []
@PointClass base(Weapon) studio("models/items/healthkit.mdl") = vest_trooper			: "Highcom Trooper TFO Armor			(Tier 4)" []
@PointClass base(Weapon) studio("models/items/healthkit.mdl") = vest_untar				: "MF-UNTAR Armor Vest					(Tier 3)" []
@PointClass base(Weapon) studio("models/items/healthkit.mdl") = vest_wartech_tv110		: "Wartech TV-110 Plate Carrier			(Tier 4)" []
@PointClass base(Weapon) studio("models/items/healthkit.mdl") = vest_zhuk3				: "Zhuk-3 Press Armor					(Tier 3)" []
@PointClass base(Weapon) studio("models/items/healthkit.mdl") = vest_zhuk6				: "Zhuk-6a Heavy Armor					(Tier 6)" []

//selling


@PointClass base(Origin, Targetname) = efgm_seller : "Seller Entity" 
[

    // Inputs
    input    OpenSellGUI(void)       : "Called to open sell GUI"

]

@PointClass base(Origin, Targetname) = efgm_spawn_manager : "Spawn Manager"
[

weapon_template(choices) : "Weapon Spawning Template" : 0 : "Sets the template that the weapon spawners (crates included) will use." =
[
0 : "Default (TFA)"
1 : "ArcCW"
]

armor_template(choices) : "Armor Spawning Template" : 0 : "Currently unused, set this to default." =
[
0 : "Default"
]

]

@SolidClass base(Trigger) = efgm_trigger_extract : "Extract Trigger"
[

    extract_time(integer)            : "Extract Time"            : 7                                            : "The delay between entering the extract trigger and actually extracting. Setting this to zero or below will probably break things."

    extract_name(string)            : "Extract Name"            : ""                                        : "Used by players to find extract locations. Make the name appropriate; name the extract according to what a player would look for in order to find it. (e.g. Power Station Gate, Road to Bunker, Southwestern Checkpoint, Gooey Helipad, etc.)"

    disabled_message(string)        : "Disabled Message"        : "This extract is currently disabled!"        : "This is the message displayed to anyone attempting to extract if the extract is disabled. If the extract is enabled by an event, listing that event here would be a good idea. You can leave this blank if the extract is guranteed."

    extract_group(string)            : "Extract Group"            : "All"                                        : "Group of spawns which can use this extract. See efgm_raid_spawn for more details. Put 'All' if the extract can be used by anybody."

    start_extract_disabled(boolean)    : "Start Extract Disabled"    : 0                                            : "Will this extract start disabled or not. (Does an event need to occur for this extract to become available)"

    availability(choices)            : "Extract Availability"    : 0                                            : "Availability of this extract. Is this extract guranteed or not? (Does not determine logic, only used so a player can tell if it's guranteed)" =
    [
        0 : "Guranteed"
        1 : "Not Guranteed"
    ]

    segregation(choices)            : "Extract Accessibility"    : 0                                            : "Availability of this extract to types of players. Also, it's called segregation internally because accessibility sounds too similar to availability, which is already an option. Sorry America!" =
    [
        0 : "Universal"
        1 : "PMC"
        2 : "Player Scav"
    ]

    // Outputs
    output    OnExtract(void)    : "Fires when a player uses this extract."

    // Inputs
    input EnableExtract(void)        : "Enables the extract."

    input DisableExtract(void)        : "Disables the extract."
    
]

@PointClass base(Targetname, PlayerClass, Angles) studio("models/editor/playerstart.mdl") = efgm_raid_spawn : "Player Spawn"
[

    // Key Values

    spawn_type(choices) : "Spawn Type" : 0 : "Type of player that can spawn here. PMC spawns a PMC at the start of the raid, Player Scav spawns player scavs mid-raid, and Universal spawns both." =
    [
        0 : "Universal"
        1 : "PMC"
        2 : "Player Scav"
    ]

    spawn_group(string) : "Spawn Group" : "" :
    "Spawn groups are used in conjunction with extracts to give each player different extraction points depending on their spawn location."+
    "For instance, a player spawning at a raid spawn with the group 'west' can only extract at extracts with the group 'west'."+
    "Leave blank to make the player spawned here be able to extract anywhere."


]

@PointClass base(Targetname) = efgm_stash_activator    : ""
[

    // Inputs
    input OpenStash(void)        : "Opens the activator's stash."
    
    input CloseStash(void)        : "Closes everyone's stash. This should be used for events such as when a raid starts."

]

@PointClass base(Targetname) = efgm_raid_starter : "Raid Manager"
[
    
    // Key Values
    raid_time(integer)            : "Raid Time"            : 15                                            : "The amount of time the raid lasts in minutes. This time starts when PMC's spawn in. When this time is up, all players in the raid will die and lose all their loot, and a map vote will be initialized."

    // Outputs
    output    OnRaidEnd(void)        : "Fires when the raid ends. Useful for resetting the map, or doing similar types of utmost trollage."

    // Inputs
    input    StartRaid(void)       : "This starts a raid. Use in conjunction with a button, trigger, etc."

]

@PointClass base(Angles) = arccw_workbench : "Workbench (ArcCW)" []
